# ======================
# 核心架构配置
# ======================
CONFIG_TARGET_x86=y
CONFIG_TARGET_x86_64=y
CONFIG_TARGET_x86_64_DEVICE_GENERIC=y

# ======================
# 固件格式配置 - 关键修改部分
# ======================
CONFIG_TARGET_KERNEL_PARTSIZE=32
CONFIG_TARGET_ROOTFS_PARTSIZE=944
CONFIG_GRUB_EFI_IMAGES=y
CONFIG_TARGET_IMAGES_GZIP=y
CONFIG_TARGET_ROOTFS_SQUASHFS=y
CONFIG_TARGET_ROOTFS_EXT4FS=n
CONFIG_TARGET_ROOTFS_ISO=n
CONFIG_TARGET_ROOTFS_CPIOGZ=n
CONFIG_TARGET_ROOTFS_TARGZ=n
CONFIG_TARGET_ROOTFS_UBIFS=n

# ======================
# LLVM/Clang 工具链极致优化
# ======================
CONFIG_KERNEL_CLANG_LLVM=y
CONFIG_LLVM_TARGET_ARCH="x86-64-v2"
CONFIG_LLVM_TARGET_AARCH64=n
CONFIG_LLVM_TARGET_ARM=n
CONFIG_LLVM_TARGET_BPF=n  # 保持为 'n'，BPF 代码通常由 clang 定位到 bpf 架构，但此处是配置宿主机的 LLVM 目标支持
CONFIG_LLVM_TARGET_MIPS=n
CONFIG_LLVM_TARGET_POWERPC=n
CONFIG_LLVM_TARGET_RISCV=n
CONFIG_LLVM_TARGET_X86=y

# ======================
# 链接器优化
# ======================
CONFIG_USE_LLD=y
CONFIG_KERNEL_LD_ORPHAN_WARN=n

# ======================
# LTO 优化
# ======================
CONFIG_LTO_CLANG_THIN=y
CONFIG_LTO_CLANG_FULL=n
CONFIG_KERNEL_LTO=y
CONFIG_KERNEL_LTO_CLANG_THIN=y
CONFIG_KERNEL_LTO_CLANG_FULL=n

# ======================
# 编译优化级别
# ======================
CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
CONFIG_KERNEL_OPTIMIZE_O3=y
CONFIG_KERNEL_OPTIMIZE_FOR_PERFORMANCE=y
CONFIG_CC_OPTIMIZE_FOR_SIZE=n
CONFIG_OPTIMIZE_INLINING=y

# ======================
# 架构特定优化
# ======================
CONFIG_GCC_OPTIMIZE_CPU_NOCONA=n
CONFIG_GCC_OPTIMIZE_CPU_CORE2=n
CONFIG_GCC_OPTIMIZE_CPU_NATIVE=y

# ======================
# 控制流完整性增强
# ======================
CONFIG_CFI_CLANG=y
# 注意：CFI 可能与某些 eBPF 内部操作交互，若运行时遇到问题可考虑调整为 CONFIG_CFI_PERMISSIVE=y
CONFIG_CFI_CLANG_SHADOW=y
CONFIG_CFI_PERMISSIVE=n

# ======================
# 其他编译优化
# ======================
CONFIG_CC_DISABLE_WARN_MAYBE_UNINITIALIZED=n
CONFIG_KERNEL_BINUTILS_STRINGS=y
CONFIG_ZLIB_OPTIMIZE_SPEED=y

# ======================
# 调试信息配置 (对 eBPF 开发及调试重要)
# ======================
CONFIG_DEBUG_INFO_NONE=n
CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y  # 生成 DWARF 调试信息，bpftool 等工具可能需要
CONFIG_DEBUG_INFO_COMPRESSED_ZLIB=y          # 压缩调试信息以节省空间
CONFIG_DEBUG_INFO_REDUCED=n
CONFIG_DEBUG_INFO_BTF=y                      # [新增] 启用 BTF (BPF Type Format)，对现代 eBPF 工具链很重要
CONFIG_PAHOLE_HAS_SPLIT_BTF=y                # [新增] 假设 pahole 工具支持生成 split BTF
CONFIG_DEBUG_INFO_BTF_MODULES=y              # [新增] 为内核模块也生成 BTF 信息

# ======================
# LLVM 组件配置
# ======================
CONFIG_LLVM_DISTRIBUTION_COMPONENTS="clang;lld;llvm-objcopy;llvm-objdump;llvm-ar;llvm-nm"
CONFIG_LLVM_POLLY_OPTIMIZER=n
CONFIG_CLANG_PYTHON_BINDINGS=n
CONFIG_CLANG_TIDY=n

# ======================
# 内核模块压缩
# ======================
CONFIG_MODULE_COMPRESS_XZ=y
CONFIG_MODULE_COMPRESS_GZIP=n
CONFIG_MODULE_COMPRESS_NONE=n

# ======================
# eBPF 核心子系统支持 [新增]
# ======================
CONFIG_BPF=y                                 # [新增] 启用 eBPF 系统
CONFIG_BPF_SYSCALL=y                         # [新增] 启用 bpf() 系统调用
CONFIG_BPF_JIT=y                             # [新增] 启用 BPF JIT 编译器（性能关键）
CONFIG_BPF_JIT_ALWAYS_ON=y                   # [新增] 始终开启 JIT， mitigates 某些 Spectre 变种并提升性能
CONFIG_HAVE_EBPF_JIT=y                       # [新增] 架构支持 eBPF JIT (x86_64 应支持)
CONFIG_ARCH_WANT_DEFAULT_BPF_JIT=y           # [新增] 架构默认启用 BPF JIT
CONFIG_BPF_EVENTS=y                          # [新增] 允许 eBPF 程序附加到跟踪点、kprobe 等事件
CONFIG_BPF_STREAM_PARSER=y                   # [新增] BPF 流解析器，用于套接字相关操作

# ======================
# XDP 支持 [新增]
# ======================
CONFIG_XDP_SOCKETS=y                         # [新增] 启用 AF_XDP 套接字，用于高性能用户态包处理
CONFIG_XDP_SOCKETS_DIAG=y                    # [新增] AF_XDP 套接字诊断支持
CONFIG_XDP_OPTIONS=y                         # [新增] XDP 选项支持

# ======================
# 网络相关 eBPF/XDP 功能 [新增]
# ======================
CONFIG_NET_CLS_BPF=y                         # [新增] 允许 BPF 程序作为流量分类器
CONFIG_NET_ACT_BPF=y                         # [新增] 允许 BPF 程序作为流量动作
CONFIG_BPF_FLOW_DISSECTOR=y                  # [新增] BPF 流解析器
CONFIG_NET_SCH_INGRESS=y                     # [新增] 入口流量控制，可供 eBPF 使用
CONFIG_NET_EGRESS=y                          # [已存在] 出口流量控制，可供 eBPF 使用
CONFIG_NET_XGRESS=y                          # [已存在] 通用 XGRESS 支持

# ======================
# eBPF 映射和程序类型 [新增]
# ======================
CONFIG_BPF_LSM=y                             # [新增] 允许 eBPF 程序附加到 LSM (Linux 安全模块) 钩子
CONFIG_BPF_PRELOAD=y                         # [新增] 预加载 BPF 程序（例如用于调试）
CONFIG_BPF_PRELOAD_UMD=y                     # [新增] 预加载 BPF 用户模式驱动程序
CONFIG_BPF_UNPRIV_DEFAULT_OFF=y              # [新增] 默认禁止非特权 BPF，更安全

# ======================
# 必备用户态工具 (通过 OpenWrt 包选择安装，此处确保内核支持) [新增]
# ======================
CONFIG_BPFILTER=y                            # [新增] BPF 基础的包过滤（可选，可与 nftables 共存）
CONFIG_BPFILTER_UMH=y                        # [新增] BPF 过滤器的用户模式助手
CONFIG_TEST_BPF=y                            # [新增] 编译 BPF 自测试（可选，用于验证）

# ======================
# J4125 专属调度优化
# ======================
CONFIG_SCHED_PDS=y
CONFIG_TICK_CPU_ACCOUNTING=n
CONFIG_SCHED_MC_PRIO=y
CONFIG_PREEMPT_DYNAMIC=y
CONFIG_NO_HZ_FULL=y
CONFIG_NO_HZ_FULL_ALL=y
CONFIG_HIGH_RES_TIMERS=y
CONFIG_SCHED_CORE=y
CONFIG_SCHED_MC=y
CONFIG_SCHED_HRTICK=y
CONFIG_RCU_BOOST=y
CONFIG_SOFTIRQ_ON_OWN_STACK=y
CONFIG_SCHED_CORE_LLC=y
CONFIG_CPU_ISOLATION=y
CONFIG_MIGRATION=y
CONFIG_INTEL_IDLE=n
CONFIG_RCU_NOCB_CPU=y
CONFIG_PREEMPT=y
CONFIG_HZ=1000

# ======================
# 内存优化 (8GB 专用)
# ======================
CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y
CONFIG_LRU_GEN=y
CONFIG_LRU_GEN_ENABLED=y
CONFIG_LRU_GEN_WALKS_MMU=y
CONFIG_COMPACTION=y
CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y
CONFIG_DAMON=y
CONFIG_DAMON_VADDR=y
CONFIG_DAMON_PADDR=y
CONFIG_DAMON_RECLAIM=y
CONFIG_PAGE_POOL=y
CONFIG_PAGE_POOL_STATS=y
CONFIG_SLUB=y
CONFIG_SLUB_CPU_PARTIAL=y
CONFIG_SLUB_STATS=y
CONFIG_SLUB_DEBUG=n
CONFIG_SLUB_DEBUG_ON=n
CONFIG_KFENCE=y
CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
CONFIG_ARCH_WANT_OPTIMIZE_DAX_VMEMMAP=y
CONFIG_ARCH_WANT_OPTIMIZE_HUGETLB_VMEMMAP=y

# ======================
# 网络基础优化
# ======================
CONFIG_TCP_AO=y
CONFIG_TCP_MD5SIG=y
CONFIG_TCP_NO_TSQ=y
CONFIG_NET_FLOW_LIMIT=y

# ======================
# 全锥形 NAT 支持
# ======================
CONFIG_NF_NAT_FULLCONE=y
CONFIG_NF_CONNTRACK=y
CONFIG_NF_CONNTRACK_EVENTS=y
CONFIG_NF_NAT=y
CONFIG_NF_NAT_NEEDED=y

# ======================
# 关键调度模块
# ======================
CONFIG_PACKAGE_kmod-sched-core=y
CONFIG_PACKAGE_kmod-sched-fq=y
CONFIG_PACKAGE_kmod-sched-cake=y
CONFIG_PACKAGE_kmod-sched-connmark=y
CONFIG_PACKAGE_kmod-sched-bpf=y
CONFIG_PACKAGE_kmod-ifb=y
CONFIG_PACKAGE_kmod-bonding=y
CONFIG_PACKAGE_kmod-tcp-bbr=y

# ======================
# nftables 核心模块
# ======================
CONFIG_PACKAGE_kmod-nft-core=y
CONFIG_PACKAGE_kmod-nft-netdev=y             # [重要] 支持 nftables 在 netdev 族（含 XDP 钩子）
CONFIG_PACKAGE_kmod-nft-bridge=y
CONFIG_PACKAGE_kmod-nft-nat=y
CONFIG_PACKAGE_kmod-nft-socket=y
CONFIG_PACKAGE_kmod-nft-fullcone=y
CONFIG_PACKAGE_kmod-nft-offload=y            # [重要] 支持将 nftables 规则卸载到硬件（如果网卡支持）
CONFIG_PACKAGE_nftables=y
CONFIG_PACKAGE_nftables-json=y
CONFIG_PACKAGE_libnftnl=y

# ======================
# Netfilter 加速
# ======================
CONFIG_PACKAGE_kmod-nf-flow=y
CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y
CONFIG_PACKAGE_kmod-nf-reject=y

# ======================
# 加密加速
# ======================
CONFIG_PACKAGE_kmod-crypto-sha256=y
CONFIG_CRYPTO_AES_NI_INTEL=y
CONFIG_CRYPTO_LIB_BLAKE2S=y                  # [新增] 某些 BPF 相关组件可能使用

# ======================
# 内核级网络优化
# ======================
CONFIG_TCP_CONG_BBR=y
CONFIG_TCP_CONG_ADVANCED=y
CONFIG_TCP_ZERO_COPY_RECEIVE=y
CONFIG_NET_EGRESS=y                          # [已存在]
CONFIG_NET_XGRESS=y                          # [已存在]
CONFIG_CONNECT_IP_ROUTE_MULTIPATH=y
CONFIG_IPV6_ROUTER_PREF=y
CONFIG_NET_RX_BUSY_POOL=y
CONFIG_NET_RX_BUSY_POLL=y
CONFIG_NET_RX_BUSY_POLL_BUDGET=512
CONFIG_IP_MULTIPLE_TABLES=y
CONFIG_NET_DEVLINK=y
CONFIG_NET_SCH_DEFAULT=y
CONFIG_DEFAULT_FQ_CODEL=y
CONFIG_NET_SCH_MQPRIO=y
CONFIG_NET_EMATCH=y
CONFIG_NET_ACT_MIRRED=y
CONFIG_IP_TUNNEL=y
CONFIG_NET_SCH_TAPRIO=y
CONFIG_NET_SCH_MULTIQ=y
CONFIG_NET_SCH_PIE=y
CONFIG_NET_SCH_FQ_PIE=y
CONFIG_NET_NS=y
CONFIG_NET_NS_DELAYED=y
CONFIG_NET_SKB_HEADROOM=128
CONFIG_NET_SKB_ALLOC_SIZE=2048
CONFIG_NET_SKB_PAD=64
CONFIG_NET_SKB_DATA_ALIGNMENT=64

# ======================
# Netfilter 硬件加速
# ======================
CONFIG_NETFILTER_FLOW_OFFLOAD=y
CONFIG_NETFILTER_XT_TARGET_FLOWOFFLOAD=y
CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
CONFIG_NETFILTER_XT_MATCH_STATE=y
CONFIG_NET_CLS_ACT=y
CONFIG_NET_ACT_POLICE=y

# ======================
# Netfilter 基础支持
# ======================
CONFIG_NETFILTER=y
CONFIG_NETFILTER_ADVANCED=y
CONFIG_NF_CONNTRACK_IPV4=y
CONFIG_NF_CONNTRACK_IPV6=y
CONFIG_NF_DEFRAG_IPV4=y
CONFIG_NF_DEFRAG_IPV6=y
CONFIG_NF_NAT_IPV4=y
CONFIG_NF_NAT_IPV6=y
CONFIG_NF_NAT_MASQUERADE_IPV4=y
CONFIG_NF_NAT_MASQUERADE_IPV6=y
CONFIG_NF_TABLES=y
CONFIG_NF_TABLES_INET=y
CONFIG_NF_TABLES_IPV4=y
CONFIG_NF_TABLES_IPV6=y
CONFIG_NF_TABLES_NETDEV=y                    # [重要] 允许 nftables 在网络设备层操作（与 XDP 相关）
CONFIG_NF_TABLES_BRIDGE=y

# ======================
# i226 网卡极致优化 (确认 IGC 驱动支持 XDP)
# ======================
CONFIG_IGC_DCA=y
CONFIG_IGC=y                                 # 确保此驱动支持 XDP，通常需要
CONFIG_IGC_HWMON=y
CONFIG_IGC_DIM=y
CONFIG_IGC_VLAN_STRIPPING=y
CONFIG_IGC_LRO=y                             # 大型接收卸载，可能与 XDP 协作或互斥，需测试
CONFIG_IGC_TSN=y
CONFIG_IGC_LATENCY_TOLERANCE=y
CONFIG_IGC_TAPRIO=y
CONFIG_IGC_QUEUES=4                          # 多队列支持对 XDP 性能有益
CONFIG_IGC_RX_POLLING=y                      # 轮询模式通常有利于高性能场景
CONFIG_IGC_RX_NAPI=y
CONFIG_IGC_TX_NAPI=y
CONFIG_IGC_GSO=y
CONFIG_IGC_GRO=y
CONFIG_IGC_RX_COPYBREAK=1024
CONFIG_IGC_RX_NAPI_WEIGHT=256
CONFIG_IGC_RSS=4                             # RSS (接收端缩放) 对多队列和 XDP 很重要
CONFIG_IGC_TSO=y
# 注意：网卡驱动对 XDP 的支持程度是关键。IGC 驱动较新，通常支持 XDP。建议查阅最新内核文档或驱动源码确认。

# ======================
# 网卡队列优化
# ======================
CONFIG_XPS=y
CONFIG_XPS_DEFAULT_QUEUES=4
CONFIG_RPS=y
CONFIG_RFS_ACCEL=y
CONFIG_PCI_MSI=y
CONFIG_IRQ_AFFINITY_HINT=y
CONFIG_PCI_MSI_IRQ_DOMAIN=y
CONFIG_IRQ_POLL=y

# ======================
# 中断优化
# ======================
CONFIG_IRQ_FORCED_THREADING=y
CONFIG_GENERIC_IRQ_IPI=y
CONFIG_IRQ_TIME_ACCOUNTING=y
CONFIG_HARDIRQS_SW_RESEND=y
CONFIG_IRQ_DOMAIN_HIERARCHY=y
CONFIG_PACKAGE_irqbalance=y                  # 对于多队列网卡和 CPU 绑定，irqbalance 或手动中断分配可能重要
CONFIG_PACKAGE_luci-app-irqbalance=y

# ======================
# 电源与 CPU 调控
# ======================
CONFIG_INTEL_EPB=y
CONFIG_INTEL_PSTATE=y
CONFIG_INTEL_PSTATE_HWP=y
CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y    # 性能调控器对网络处理延迟更有利
CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y
CONFIG_CPU_FREQ_GOV_ONDEMAND=y
CONFIG_ACPI_CPPC_CPUFREQ=y
CONFIG_ACPI_CPPC_LIB=y
CONFIG_INTEL_TCC=y
CONFIG_INTEL_IDLE=n

# ======================
# 文件系统加速
# ======================
CONFIG_SQUASHFS_XZ=y
CONFIG_SQUASHFS_DECOMP_MULTI_PERCPU=y
CONFIG_PACKAGE_kmod-fs-ntfs3=y
CONFIG_BCACHEFS=y
CONFIG_FS_VERITY=y
CONFIG_PAGE_SIZE_4KB=y

# ======================
# 安全增强
# ======================
CONFIG_STRICT_KERNEL_RWX=y
CONFIG_HARDENED_USERCOPY=y
CONFIG_INIT_STACK_ALL_ZERO=y
CONFIG_STACKPROTECTOR_STRONG=y
CONFIG_RANDOMIZE_KSTACK_OFFSET=y
CONFIG_STATIC_USERMODEHELPER=y
CONFIG_ZERO_CALL_USED_REGS=y
CONFIG_SECURITY_SELINUX=y
CONFIG_RETPOLINE=n                           # 使用 Intel CPU, 且 CFI 可能已提供缓解，故关闭
CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
CONFIG_HAVE_ARCH_WITHIN_STACK_FRAMES=y
CONFIG_HAVE_RUST=n

# ======================
# 定时器优化
# ======================
CONFIG_NO_HZ=y
CONFIG_NO_HZ_COMMON=y
CONFIG_NO_HZ_FULL=y                          # [已存在] 对 CPU 隔离和低延迟网络有益
CONFIG_NO_HZ_FULL_ALL=y                      # [已存在]
CONFIG_HZ_PERIODIC=n
CONFIG_HZ_1000=y                             # [已存在] 高 HZ 利于低延迟

# ======================
# 缓存优化
# ======================
CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
CONFIG_TRANSPARENT_HUGEPAGE=y
CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS=n
CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y

# ======================
# 必备工具 (建议在 OpenWrt 包选择中确保安装)
# ======================
CONFIG_PACKAGE_htop=y
CONFIG_PACKAGE_iperf3=y
CONFIG_PACKAGE_ethtool=y                     # 用于检查和配置网卡（如查看 XDP 功能）
CONFIG_PACKAGE_openssl-util=y
# 建议额外添加的包（需在 OpenWrt menuconfig 的 Package selection 中勾选）：
CONFIG_PACKAGE_bpftool=y                   # [重要] 用于管理和调试 eBPF 程序和映射
CONFIG_PACKAGE_ip-full=y                   # [重要] `ip link` 命令支持设置 XDP 程序
CONFIG_PACKAGE_clang-bpf-targets=y         # 如需在路由器上编译 eBPF 程序（非必须）

# ======================
# LuCI 应用
# ======================
CONFIG_PACKAGE_luci-app-arpbind=y
CONFIG_PACKAGE_luci-app-diskman=y
CONFIG_PACKAGE_luci-app-oaf=y                # OAF (Open App Filter) 可能基于 eBPF
CONFIG_PACKAGE_luci-app-filemanager=y

# ======================
# IPv6 支持
# ======================
CONFIG_PACKAGE_ipv6helper=y
CONFIG_IPV6_ROUTER_PREF=y
CONFIG_IPV6_ROUTE_INFO=y
CONFIG_IPV6_MULTIPLE_TABLES=y
CONFIG_IPV6_OPTIMISTIC_DAD=y
CONFIG_IPV6_SUBTREES=y